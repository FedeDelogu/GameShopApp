<!--
    Questa pagina ha estensione cshtml, cioè sarà una pagina HTML che tramite l'uso del simbolo chiocciola potrà
    sfruttare i comandi di C#

    chiocciola using serve per dire dove cercare i modelli
                     (ricordate che HTML non ha il concetto di classe, quindi le direttive devono
                     sempre essere scritte per intero, partendo dal namespace)
    chiocciola model serve per rappresentare il tipo di dato che userò in questa pagina
    chiocciola Model con la maiuscola si indica il nome di default dell'oggetto importato da BE
-->
<!-- Questo serve per dire dove cercare Entity-->
@using Utility
<!-- Questo serve per dire dove cercare Fumetto quando casterò-->
@using WebAppPlayshphere.Models
<!-- Questo serve per dire il tipo di informazione che il BE mi spedisce qui-->
@model List<Utility.Entity>

@* @{
    Layout = "_Layout";
} *@

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />

    <title>Elenco</title>
</head>
<body>
    @{
        <div class="my-3">
            <h2>Recensioni</h2>
        </div>
         
        <div class="row gy-3">
        @foreach (var f in @Model)
        {
            if (((Recensione)f).Valido){
                <div class="col-md-4">
                            <div class="card rounded-4 text-white h-100">
                                <div class="card-body">
                            <h5 class="fw-bold" style="color:var(--flame)">@(((Recensione)f).Utente.Username)</h5>

                            <p class="card-text">
                                @(((Recensione)f).Commento)
                            </p>

                            <!-- Stelline per la valutazione -->
                            <div>
                                @for (double i = 0; i < 5; i++)
                                {
                                    var rating = (((Recensione)f).Valutazione);  // Assicurati che recensione.Valutazione sia un tipo numerico (double o float)

                                    if (i < (int)rating)  // Se l'indice è inferiore al valore intero della valutazione
                                    {
                                        <span class="bi bi-star-fill" style="color:gold;"></span> <!-- Stella piena -->
                                    }
                                    else if (i < (int)rating + 1 && rating - (int)rating >= 0.5)  // Se la parte decimale è >= 0.5, mostra una mezza stella
                                    {
                                        <span class="bi bi-star-half" style="color:gold;"></span> <!-- Mezza stella -->
                                    }
                                    else
                                    {
                                        <span class="bi bi-star" style="color:gold;"></span> <!-- Stella vuota -->
                                    }
                                }
                                <span class="ms-2">@(((Recensione)f).Valutazione.ToString("F1"))</span>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else if(@Model.Count < 1)
            {
                <p>Non ci sono recensioni per questo videogioco.</p>
            }

        }
        </div>

    }
        
</body>
<!-- Inclusione di Bootstrap e icone per le stelle -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://kit.fontawesome.com/a076d05399.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
</html>